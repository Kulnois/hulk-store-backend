{"version":3,"sources":["redux/user/user.types.js","redux/Order/order.types.js","redux/user/user.actions.js","components/Header/Header.jsx","components/Rating/Rating.jsx","components/Product/Product.jsx","components/Message/Message.jsx","components/Loader/Loader.jsx","redux/product/product.types.js","redux/product/product.action.js","view/HomeView.jsx","view/ProductView.jsx","view/LoginView.jsx","view/RegisterView.jsx","redux/cart/cart.types.js","redux/cart/cart.actions.js","view/CartView.jsx","view/ProfileView.jsx","redux/Order/order.actions.js","components/Footer/Footer.jsx","view/OrderListView.jsx","view/OrderView.jsx","components/CheckoutSteps/CheckoutSteps.jsx","view/PaymentView.jsx","view/PlaceOrderView.jsx","view/ProductEditView.jsx","view/ProductListView.jsx","view/ShippingView.jsx","view/UserListView.jsx","view/UserEdit.jsx","App.js","reportWebVitals.js","redux/store.js","redux/product/product.reducers.js","redux/user/user.reducers.js","redux/cart/cart.reducers.js","redux/Order/order.reducers.js","index.js"],"names":["UserActionTypes","USER_LOGIN_REQUEST","USER_LOGIN_SUCCESS","USER_LOGIN_FAIL","USER_LOGOUT","USER_REGISTER_REQUEST","USER_REGISTER_SUCCESS","USER_REGISTER_FAIL","USER_DETAILS_REQUEST","USER_DETAILS_SUCCESS","USER_DETAILS_FAIL","USER_DETAILS_RESET","USER_UPDATE_PROFILE_REQUEST","USER_UPDATE_PROFILE_SUCCESS","USER_UPDATE_PROFILE_FAIL","USER_UPDATE_PROFILE_RESET","USER_LIST_REQUEST","USER_LIST_SUCCESS","USER_LIST_FAIL","USER_LIST_RESET","USER_DELETE_REQUEST","USER_DELETE_SUCCESS","USER_DELETE_FAIL","USER_UPDATE_REQUEST","USER_UPDATE_SUCCESS","USER_UPDATE_FAIL","USER_UPDATE_RESET","OrderActionTypes","ORDER_CREATE_REQUEST","ORDER_CREATE_SUCCESS","ORDER_CREATE_FAIL","ORDER_DETAILS_REQUEST","ORDER_DETAILS_SUCCESS","ORDER_DETAILS_FAIL","ORDER_PAY_REQUEST","ORDER_PAY_SUCCESS","ORDER_PAY_FAIL","ORDER_PAY_RESET","ORDER_LIST_MY_REQUEST","ORDER_LIST_MY_SUCCESS","ORDER_LIST_MY_FAIL","ORDER_LIST_MY_RESET","ORDER_LIST_REQUEST","ORDER_LIST_SUCCESS","ORDER_LIST_FAIL","ORDER_DELIVER_REQUEST","ORDER_DELIVER_SUCCESS","ORDER_DELIVER_FAIL","ORDER_DELIVER_RESET","getUserDetails","id","dispatch","getState","a","type","userInfo","userLogin","config","headers","Authorization","token","axios","get","data","payload","response","message","Header","useDispatch","useSelector","state","Navbar","expand","collapseOnSelect","className","Container","to","Brand","Toggle","aria-controls","Collapse","Nav","Link","NavDropdown","title","name","Item","isAdmin","onClick","localStorage","removeItem","Rating","value","text","color","style","defaultProps","Product","product","Card","_id","Img","src","image","variant","Body","Title","as","Text","rating","price","Message","children","Alert","Loader","Spinner","animation","role","width","height","margin","display","ProductActionTypes","PRODUCT_LIST_REQUEST","PRODUCT_LIST_SUCCESS","PRODUCT_LIST_FAIL","PRODUCT_DETAILS_REQUEST","PRODUCT_DETAILS_SUCCESS","PRODUCT_DETAILS_FAIL","PRODUCT_DELETE_REQUEST","PRODUCT_DELETE_SUCCESS","PRODUCT_DELETE_FAIL","PRODUCT_CREATE_REQUEST","PRODUCT_CREATE_SUCCESS","PRODUCT_CREATE_FAIL","PRODUCT_CREATE_RESET","PRODUCT_UPDATE_REQUEST","PRODUCT_UPDATE_SUCCESS","PRODUCT_UPDATE_FAIL","PRODUCT_UPDATE_RESET","listProducts","listProductDetails","HomeView","productList","loading","error","products","useTranslation","t","useEffect","Row","map","Col","sm","md","lg","ProductView","history","match","useState","qty","setQty","productDetails","params","Image","alt","fluid","ListGroup","description","varian","active","countInStock","Form","Control","onChange","e","target","Array","keys","x","Button","push","disabled","LoginView","location","email","setEmail","password","setPassword","redirect","search","split","xs","onSubmit","preventDefault","post","setItem","JSON","stringify","login","Group","controlId","Label","placeholder","RegisterView","setName","confirmPassword","setConfirmPassword","setMessage","userRegister","register","CartActionTypes","CART_ADD_ITEM","CART_REMOVE_ITEM","CART_SAVE_SHIPPING_ADDRESS","CART_SAVE_PAYMENT_METHOD","addToCart","cart","cartItems","CartView","productId","Number","removeFromCartHandler","removeFromCart","length","item","rounded","reduce","acc","toFixed","ProfileView","userDetails","user","success","userUpdateProfile","orderListMy","loadingOrders","errorOrders","orders","put","updateUserProfile","Table","striped","bordered","hover","responsive","order","createdAt","substring","totalPrice","isPaid","paidAt","isDelivered","deliveredAt","Footer","OrderListView","orderList","OrderView","num","orderId","sdkReady","setSdkReady","orderDetails","orderPay","loadingPay","successPay","orderDeliver","loadingDeliver","successDeliver","itemsPrice","orderItems","Math","round","addPayPalScrip","clientId","script","document","createElement","async","onload","body","appendChild","window","paypal","href","shippingAddress","address","city","postalCode","country","paymentMethod","index","shippingPrice","taxPrice","amount","onSuccess","paymentResutl","console","log","paymentResult","payOrder","deliverOrder","CheckoutSteps","step1","step2","step3","step4","PaymentView","setPaymentMethod","Check","label","checked","PlaceOrderView","addDecimals","orderCreate","createOrder","ProductEditView","setPrice","setImage","brand","setBrand","category","setCategory","setCountInStock","setDescription","productUpdate","loadingUpdate","errorUpdate","successUpdate","updateProduct","ProductListView","productDelete","loadingDelete","errorDelete","successDelete","productCreate","loadingCreate","errorCreate","successCreate","createdProduct","deleteHandler","confirm","delete","deleteProduct","ShippingView","setAddress","setCity","setPostalCode","setCountry","required","UserListView","userList","users","userDelete","idUser","UserEditView","userId","setIsAdmin","userUpdate","updateUser","App","path","component","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","reducer","combineReducers","action","reviews","existItem","find","filter","cartItemsFormStorage","getItem","parse","userInfoFormStorage","initialState","middleware","thunk","store","createStore","composeWithDevTools","applyMiddleware","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.507865ba.chunk.js","sourcesContent":["const UserActionTypes = {\r\n    USER_LOGIN_REQUEST: 'USER_LOGIN_REQUEST',\r\n    USER_LOGIN_SUCCESS: 'USER_LOGIN_SUCCESS',\r\n    USER_LOGIN_FAIL: 'USER_LOGIN_FAIL',\r\n    USER_LOGOUT: 'USER_LOGOUT',\r\n\r\n    USER_REGISTER_REQUEST: 'USER_REGISTER_REQUEST',\r\n    USER_REGISTER_SUCCESS: 'USER_REGISTER_SUCCESS',\r\n    USER_REGISTER_FAIL: 'USER_REGISTER_FAIL',\r\n\r\n    USER_DETAILS_REQUEST: 'USER_DETAILS_REQUEST',\r\n    USER_DETAILS_SUCCESS: 'USER_DETAILS_SUCCESS',\r\n    USER_DETAILS_FAIL: 'USER_DETAILS_FAIL',\r\n    USER_DETAILS_RESET: 'USER_DETAILS_RESET',\r\n\r\n    USER_UPDATE_PROFILE_REQUEST: 'USER_UPDATE_PROFILE_REQUEST',\r\n    USER_UPDATE_PROFILE_SUCCESS: 'USER_UPDATE_PROFILE_SUCCESS',\r\n    USER_UPDATE_PROFILE_FAIL: 'USER_UPDATE_PROFILE_FAIL',\r\n    USER_UPDATE_PROFILE_RESET: 'USER_UPDATE_PROFILE_RESET',\r\n\r\n    USER_LIST_REQUEST: 'USER_LIST_REQUEST',\r\n    USER_LIST_SUCCESS: 'USER_LIST_SUCCESS',\r\n    USER_LIST_FAIL: 'USER_LIST_FAIL',\r\n    USER_LIST_RESET: 'USER_LIST_RESET',\r\n\r\n    USER_DELETE_REQUEST: 'USER_DELETE_REQUEST',\r\n    USER_DELETE_SUCCESS: 'USER_DELETE_SUCCESS',\r\n    USER_DELETE_FAIL: 'USER_DELETE_FAIL',\r\n\r\n    USER_UPDATE_REQUEST: 'USER_UPDATE_REQUEST',\r\n    USER_UPDATE_SUCCESS: 'USER_UPDATE_SUCCESS',\r\n    USER_UPDATE_FAIL: 'USER_UPDATE_FAIL',\r\n    USER_UPDATE_RESET: 'USER_UPDATE_RESET',\r\n};\r\n\r\nexport default UserActionTypes;","const OrderActionTypes = {\r\n    ORDER_CREATE_REQUEST: 'ORDER_CREATE_REQUEST',\r\n    ORDER_CREATE_SUCCESS: 'ORDER_CREATE_SUCCESS',\r\n    ORDER_CREATE_FAIL: 'ORDER_CREATE_FAIL',\r\n    \r\n    ORDER_DETAILS_REQUEST: 'ORDER_DETAILS_REQUEST',\r\n    ORDER_DETAILS_SUCCESS: 'ORDER_DETAILS_SUCCESS',\r\n    ORDER_DETAILS_FAIL: 'ORDER_DETAILS_FAIL',\r\n    \r\n    ORDER_PAY_REQUEST: 'ORDER_PAY_REQUEST',\r\n    ORDER_PAY_SUCCESS: 'ORDER_PAY_SUCCESS',\r\n    ORDER_PAY_FAIL: 'ORDER_PAY_FAIL',\r\n    ORDER_PAY_RESET: 'ORDER_PAY_RESET',\r\n    \r\n    ORDER_LIST_MY_REQUEST: 'ORDER_LIST_MY_REQUEST',\r\n    ORDER_LIST_MY_SUCCESS: 'ORDER_LIST_MY_SUCCESS',\r\n    ORDER_LIST_MY_FAIL: 'ORDER_LIST_MY_FAIL',\r\n    ORDER_LIST_MY_RESET: 'ORDER_LIST_MY_RESET',\r\n    \r\n    ORDER_LIST_REQUEST: 'ORDER_LIST_REQUEST',\r\n    ORDER_LIST_SUCCESS: 'ORDER_LIST_SUCCESS',\r\n    ORDER_LIST_FAIL: 'ORDER_LIST_FAIL',\r\n\r\n    ORDER_DELIVER_REQUEST: 'ORDER_DELIVER_REQUEST',\r\n    ORDER_DELIVER_SUCCESS: 'ORDER_DELIVER_SUCCESS',\r\n    ORDER_DELIVER_FAIL: 'ORDER_DELIVER_FAIL',\r\n    ORDER_DELIVER_RESET: 'ORDER_DELIVER_RESET'\r\n};\r\n\r\nexport default OrderActionTypes;","import axios from 'axios'\r\nimport UserActionTypes from './user.types'\r\nimport OrderActionTypes from '../Order/order.types'\r\n\r\nexport const login = (email, password) => async (dispatch) => {\r\n    try {\r\n        dispatch({\r\n            type: UserActionTypes.USER_LOGIN_REQUEST,\r\n        })\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }\r\n        const { data } = await axios.post('/api/users/login', { email, password}, config)\r\n\r\n        dispatch({\r\n            type: UserActionTypes.USER_LOGIN_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n        localStorage.setItem('userInfo', JSON.stringify(data))\r\n    } catch (error) {\r\n        dispatch({\r\n            type: UserActionTypes.USER_LOGIN_FAIL,\r\n            payload: \r\n                error.response && error.response.data.message \r\n                ? error.response.data.message\r\n                : error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const logout = () => (dispatch) => {\r\n    localStorage.removeItem('userInfo')\r\n    dispatch({ type: UserActionTypes.USER_LOGOUT})\r\n    dispatch({ type: UserActionTypes.USER_DETAILS_RESET })\r\n    dispatch({ type: OrderActionTypes.ORDER_LIST_MY_RESET })\r\n    dispatch({ type: UserActionTypes.USER_LIST_RESET })\r\n}\r\n\r\nexport const register = (name, email, password) => async (dispatch) => {\r\n    try {\r\n        dispatch({\r\n            type: UserActionTypes.USER_REGISTER_REQUEST,\r\n        })\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }\r\n        const { data } = await axios.post('/api/users', { name, email, password}, config)\r\n\r\n        dispatch({\r\n            type: UserActionTypes.USER_REGISTER_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n        dispatch({\r\n            type: UserActionTypes.USER_LOGIN_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n        localStorage.setItem('userInfo', JSON.stringify(data))\r\n    } catch (error) {\r\n        dispatch({\r\n            type: UserActionTypes.USER_REGISTER_FAIL,\r\n            payload: \r\n                error.response && error.response.data.message \r\n                ? error.response.data.message\r\n                : error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const getUserDetails = (id) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: UserActionTypes.USER_DETAILS_REQUEST,\r\n        })\r\n\r\n        const { userLogin: { userInfo }} = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n        const { data } = await axios.get(`/api/users/${id}`, config)\r\n\r\n        dispatch({\r\n            type: UserActionTypes.USER_DETAILS_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: UserActionTypes.USER_DETAILS_FAIL,\r\n            payload: \r\n                error.response && error.response.data.message \r\n                ? error.response.data.message\r\n                : error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const updateUserProfile = (user) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: UserActionTypes.USER_UPDATE_PROFILE_REQUEST,\r\n        })\r\n\r\n        const { userLogin: { userInfo }} = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n        const { data } = await axios.put(`/api/users/profile`, user, config)\r\n\r\n        dispatch({\r\n            type: UserActionTypes.USER_UPDATE_PROFILE_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: UserActionTypes.USER_UPDATE_PROFILE_FAIL,\r\n            payload: \r\n                error.response && error.response.data.message \r\n                ? error.response.data.message\r\n                : error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const listUsers = () => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: UserActionTypes.USER_LIST_REQUEST,\r\n        })\r\n\r\n        const { userLogin: { userInfo }} = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n        const { data } = await axios.get(`/api/users`, config)\r\n\r\n        dispatch({\r\n            type: UserActionTypes.USER_LIST_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: UserActionTypes.USER_LIST_FAIL,\r\n            payload: \r\n                error.response && error.response.data.message \r\n                ? error.response.data.message\r\n                : error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const deleteUser = (id) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: UserActionTypes.USER_DELETE_REQUEST,\r\n        })\r\n\r\n        const { userLogin: { userInfo }} = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n        \r\n        await axios.delete(`/api/users/${id}`, config)\r\n\r\n        dispatch({\r\n            type: UserActionTypes.USER_DELETE_SUCCESS\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: UserActionTypes.USER_DELETE_FAIL,\r\n            payload: \r\n                error.response && error.response.data.message \r\n                ? error.response.data.message\r\n                : error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const updateUser = (user) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: UserActionTypes.USER_UPDATE_REQUEST,\r\n        })\r\n\r\n        const { userLogin: { userInfo }} = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n        \r\n        const { data } = await axios.put(`/api/users/${user._id}`, user, config)\r\n        \r\n        dispatch({\r\n            type: UserActionTypes.USER_UPDATE_SUCCESS, payload: data\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: UserActionTypes.USER_UPDATE_FAIL,\r\n            payload: \r\n                error.response && error.response.data.message \r\n                ? error.response.data.message\r\n                : error.message\r\n        })\r\n    }\r\n}","import React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { logout } from '../../redux/user/user.actions'\r\n\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { Navbar, Nav, Container, NavDropdown } from 'react-bootstrap'\r\n\r\nconst Header = () => {\r\n    const dispatch = useDispatch()\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    const logoutHandler = () => {\r\n        dispatch(logout())\r\n    }\r\n\r\n    return (\r\n        <header>\r\n            <Navbar  expand='lg' collapseOnSelect className={'navbar navbar-dark header'} >\r\n                <Container>\r\n                    <LinkContainer to='/'>\r\n                        <Navbar.Brand>HulkStore</Navbar.Brand>\r\n                    </LinkContainer>\r\n                    <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n                    <Navbar.Collapse id='basic-navbar-nav'>\r\n                        <Nav className='ml-auto'>\r\n                            <LinkContainer to='/cart'>\r\n                                <Nav.Link> <i className=\"fas fa-shopping-cart\"></i> Cart</Nav.Link>\r\n                            </LinkContainer>\r\n                            {userInfo ? (\r\n                                <NavDropdown title={userInfo.name} id='username'>\r\n                                    <LinkContainer to='/profile'>\r\n                                        <NavDropdown.Item>Profile</NavDropdown.Item>\r\n                                    </LinkContainer>\r\n                                    {userInfo && userInfo.isAdmin && (\r\n                                        <>\r\n                                            <LinkContainer to='/admin/userlist'>\r\n                                                <NavDropdown.Item>Users</NavDropdown.Item>\r\n                                            </LinkContainer>\r\n                                            <LinkContainer to='/admin/productlist'>\r\n                                                <NavDropdown.Item>Products</NavDropdown.Item>\r\n                                            </LinkContainer>\r\n                                            <LinkContainer to='/admin/orderlist'>\r\n                                                <NavDropdown.Item>Orders</NavDropdown.Item>\r\n                                            </LinkContainer>\r\n                                        </>\r\n                                    )}\r\n                                    <NavDropdown.Item onClick={logoutHandler}>Logout</NavDropdown.Item>\r\n                                </NavDropdown>\r\n                            ) : (\r\n                                <LinkContainer to='/login'>\r\n                                    <Nav.Link><i className=\"fas fa-user\"></i> Sign In</Nav.Link>\r\n                                </LinkContainer>\r\n                            )}\r\n                        </Nav>\r\n                    </Navbar.Collapse>\r\n                </Container>\r\n            </Navbar>            \r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst Rating = ({value, text, color}) => {\r\n    return (\r\n        <div className='rating'>\r\n            <span>\r\n                <i style={{color}} className={value >= 1 ? 'fas fa-star' : value >= 0.5 ? 'fas fa-star-half-alt' : 'far fa-star'}></i>\r\n            </span>\r\n            <span>\r\n                <i style={{color}} className={value >= 2 ? 'fas fa-star' : value >= 1.5 ? 'fas fa-star-half-alt' : 'far fa-star'}></i>\r\n            </span>\r\n            <span>\r\n                <i style={{color}} className={value >= 3 ? 'fas fa-star' : value >= 2.5 ? 'fas fa-star-half-alt' : 'far fa-star'}></i>\r\n            </span>\r\n            <span>\r\n                <i style={{color}} className={value >= 4 ? 'fas fa-star' : value >= 3.5 ? 'fas fa-star-half-alt' : 'far fa-star'}></i>\r\n            </span>\r\n            <span>\r\n                <i style={{color}} className={value >= 5 ? 'fas fa-star' : value >= 4.5 ? 'fas fa-star-half-alt' : 'far fa-star'}></i>\r\n            </span>\r\n            <span>{text && text}</span>\r\n        </div>\r\n    )\r\n}\r\n\r\nRating.defaultProps = {\r\n    color: '#f8e825'\r\n}\r\n\r\nRating.propTypes = {\r\n    value: PropTypes.number.isRequired,\r\n    text: PropTypes.string.isRequired,\r\n    color: PropTypes.string\r\n}\r\n\r\nexport default Rating","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Card } from 'react-bootstrap'\r\nimport Rating from '../Rating/Rating'\r\n\r\nconst Product = ({ product }) => {\r\n    return (\r\n        <Card className='my-3 rounded product'>\r\n            <Link to={`/product/${product._id}`} className='image-t' >\r\n                <Card.Img src={product.image} variant='top'/>\r\n            </Link>\r\n            <Card.Body>\r\n                <Link to={`/product/${product._id}`} >\r\n                    <Card.Title as='div'><strong>{product.name}</strong></Card.Title>\r\n                </Link> \r\n                <Card.Text as='div'>\r\n                    <Rating value={product.rating} />\r\n                </Card.Text> \r\n\r\n                <Card.Text as='h3'>\r\n                    ${product.price}\r\n                </Card.Text>\r\n            </Card.Body>\r\n        </Card>\r\n    )\r\n}\r\n\r\nexport default Product","import React from 'react'\r\nimport { Alert } from 'react-bootstrap'\r\n\r\nconst Message = ({ variant, children }) => {\r\n    return (\r\n        <Alert variant={variant}>\r\n            {children}\r\n        </Alert>\r\n    )\r\n}\r\n\r\nMessage.defaultProps = {\r\n    variant: 'info'\r\n}\r\n\r\nexport default Message","import React from 'react'\r\nimport { Spinner } from 'react-bootstrap'\r\n\r\nconst Loader = () => {\r\n    return (\r\n        <Spinner \r\n            animation='border' \r\n            role='status' \r\n            style={{ width: '100px', height: '100px', margin: 'auto', display: 'block'}}>\r\n            <span className='sr-only'>Cargando...</span>\r\n        </Spinner>\r\n    )\r\n}\r\n\r\nexport default Loader","const ProductActionTypes = {\r\n    PRODUCT_LIST_REQUEST: 'PRODUCT_LIST_REQUEST',\r\n    PRODUCT_LIST_SUCCESS: 'PRODUCT_LIST_SUCCESS',\r\n    PRODUCT_LIST_FAIL: 'PRODUCT_LIST_FAIL',\r\n    PRODUCT_DETAILS_REQUEST: 'PRODUCT_DETAILS_REQUEST',\r\n    PRODUCT_DETAILS_SUCCESS: 'PRODUCT_DETAILS_SUCCESS',\r\n    PRODUCT_DETAILS_FAIL: 'PRODUCT_DETAILS_FAIL',\r\n    PRODUCT_DELETE_REQUEST: 'PRODUCT_DELETE_REQUEST',\r\n    PRODUCT_DELETE_SUCCESS: 'PRODUCT_DELETE_SUCCESS',\r\n    PRODUCT_DELETE_FAIL: 'PRODUCT_DELETE_FAIL',    \r\n    PRODUCT_CREATE_REQUEST: 'PRODUCT_CREATE_REQUEST',\r\n    PRODUCT_CREATE_SUCCESS: 'PRODUCT_CREATE_SUCCESS',\r\n    PRODUCT_CREATE_FAIL: 'PRODUCT_CREATE_FAIL',\r\n    PRODUCT_CREATE_RESET: 'PRODUCT_CREATE_RESET',\r\n    PRODUCT_UPDATE_REQUEST: 'PRODUCT_UPDATE_REQUEST',\r\n    PRODUCT_UPDATE_SUCCESS: 'PRODUCT_UPDATE_SUCCESS',\r\n    PRODUCT_UPDATE_FAIL: 'PRODUCT_UPDATE_FAIL',\r\n    PRODUCT_UPDATE_RESET: 'PRODUCT_UPDATE_RESET'\r\n};\r\n\r\nexport default ProductActionTypes;","import axios from 'axios'\r\nimport ProductActionTypes from './product.types'\r\n\r\nexport const listProducts = () => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: ProductActionTypes.PRODUCT_LIST_REQUEST })\r\n\r\n        const { data } = await axios.get('/api/products')\r\n\r\n        dispatch({ \r\n            type: ProductActionTypes.PRODUCT_LIST_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ProductActionTypes.PRODUCT_LIST_FAIL,\r\n            payload: \r\n                error.response && error.response.data.message \r\n                ? error.response.data.message\r\n                : error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const listProductDetails = (id) => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: ProductActionTypes.PRODUCT_DETAILS_REQUEST })\r\n\r\n        const { data } = await axios.get(`/api/products/${id}`)\r\n\r\n        dispatch({ \r\n            type: ProductActionTypes.PRODUCT_DETAILS_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ProductActionTypes.PRODUCT_DETAILS_FAIL,\r\n            payload: \r\n                error.response && error.response.data.message \r\n                ? error.response.data.message\r\n                : error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const deleteProduct = (id) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: ProductActionTypes.PRODUCT_DELETE_REQUEST,\r\n        })\r\n\r\n        const { userLogin: { userInfo }} = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n        await axios.delete(`/api/products/${id}`, config)\r\n\r\n        dispatch({\r\n            type: ProductActionTypes.PRODUCT_DELETE_SUCCESS,\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ProductActionTypes.PRODUCT_DELETE_FAIL,\r\n            payload: \r\n                error.response && error.response.data.message \r\n                ? error.response.data.message\r\n                : error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const createProduct = () => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: ProductActionTypes.PRODUCT_CREATE_REQUEST,\r\n        })\r\n\r\n        const { userLogin: { userInfo }} = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n        const { data } = await axios.post(`/api/products`, {}, config)\r\n\r\n        dispatch({\r\n            type: ProductActionTypes.PRODUCT_CREATE_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ProductActionTypes.PRODUCT_CREATE_FAIL,\r\n            payload: \r\n                error.response && error.response.data.message \r\n                ? error.response.data.message\r\n                : error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const updateProduct = (product) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: ProductActionTypes.PRODUCT_UPDATE_REQUEST,\r\n        })\r\n\r\n        const { userLogin: { userInfo }} = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n        const { data } = await axios.put(`/api/products/${product._id}`, product, config)\r\n\r\n        dispatch({\r\n            type: ProductActionTypes.PRODUCT_UPDATE_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ProductActionTypes.PRODUCT_UPDATE_FAIL,\r\n            payload: \r\n                error.response && error.response.data.message \r\n                ? error.response.data.message\r\n                : error.message\r\n        })\r\n    }\r\n}","import React, { useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Col, Row } from 'react-bootstrap'\r\nimport Product from '../components/Product/Product'\r\nimport Message from '../components/Message/Message'\r\nimport Loader from '../components/Loader/Loader'\r\nimport { listProducts } from '../redux/product/product.action'\r\nimport { useTranslation } from 'react-i18next'\r\n\r\nconst HomeView = () => {\r\n\r\n    const dispatch = useDispatch()\r\n    const productList = useSelector(state => state.productList)\r\n    const { loading, error, products } = productList\r\n    \r\n\tconst { t } = useTranslation('app')\r\n\r\n    useEffect(() => {\r\n        dispatch(listProducts())\r\n    }, [dispatch])\r\n\r\n    return (\r\n        <>\r\n            <h1>Últimos productos</h1>  \r\n            { loading ? (\r\n                <Loader />\r\n            ) : error ? (\r\n                <Message variant='danger'>{error}</Message>\r\n            ) : (\r\n                <Row>\r\n                    {products.map(product => (\r\n                        <Col sm={12} md={6} lg={4} key={product._id}>\r\n                            <Product product={product} />\r\n                        </Col>\r\n                    ))}\r\n                </Row>\r\n            )}         \r\n        </>\r\n    )\r\n}\r\n\r\nexport default HomeView\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Row, Col, Image, ListGroup, Card, Button, Form } from 'react-bootstrap'\r\nimport Rating from '../components/Rating/Rating'\r\nimport { listProductDetails } from '../redux/product/product.action'\r\nimport Loader from '../components/Loader/Loader'\r\nimport Message from '../components/Message/Message'\r\n\r\nconst ProductView = ({ history, match }) => {\r\n\r\n    const [qty, setQty] = useState(1)\r\n    const dispatch = useDispatch()\r\n    const productDetails = useSelector(state => state.productDetails)\r\n    const { loading, error, product } = productDetails\r\n\r\n    useEffect(() => {\r\n        dispatch(listProductDetails(match.params.id))\r\n    }, [ dispatch, match])\r\n\r\n    const addToCartHandler = () => {\r\n        history.push(`/cart/${match.params.id}?qty=${qty}`)\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Link className='btn btn-light my-3' to='/'>Go Back</Link>\r\n            {loading ? (\r\n                <Loader />\r\n            ) : error ? (\r\n                <Message variant='danger'>{error}</Message>\r\n            ) : (\r\n                <Row>\r\n                    <Col md={6}>\r\n                        <Image src={product.image} alt={product.name} fluid /> \r\n                    </Col>\r\n                    <Col md={3}>\r\n                        <ListGroup variant='flush'>\r\n                            <ListGroup.Item variant=\"info\">\r\n                                <h3>{product.name}</h3>\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                                <Rating value={product.rating} />\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                                Price: ${product.price}\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                                Description: ${product.description}\r\n                            </ListGroup.Item>\r\n                        </ListGroup>\r\n                    </Col>\r\n                    <Col md={3}>\r\n                        <Card>\r\n                            <ListGroup varian='flush'>\r\n                                <ListGroup.Item  active>\r\n                                    <Row>\r\n                                        <Col>\r\n                                            Price:\r\n                                        </Col>\r\n                                        <Col>\r\n                                            <strong>${product.price}</strong>\r\n                                        </Col>\r\n                                    </Row>\r\n                                </ListGroup.Item>\r\n                                <ListGroup.Item>\r\n                                    <Row>\r\n                                        <Col>\r\n                                            Status:\r\n                                        </Col>\r\n                                        <Col>\r\n                                            {product.countInStock > 0 ? 'In Stock' : 'Out of Stock'}\r\n                                        </Col>\r\n                                    </Row>\r\n                                </ListGroup.Item>\r\n                                \r\n                                {product.countInStock > 0 && (\r\n                                    <ListGroup.Item>\r\n                                        <Row>\r\n                                            <Col>Qty</Col>\r\n                                            <Col>\r\n                                                <Form.Control as='select' value={qty} \r\n                                                    onChange={(e) => setQty(e.target.value)}>\r\n                                                {\r\n                                                    [...Array(product.countInStock).keys()].map(x => (\r\n                                                        <option key={x + 1} value={x + 1}>\r\n                                                            {x + 1}\r\n                                                        </option>\r\n                                                    ))\r\n                                                }\r\n                                                </Form.Control>\r\n                                            </Col>\r\n                                        </Row>\r\n                                    </ListGroup.Item>\r\n                                )}\r\n\r\n                                <ListGroup.Item>\r\n                                    <Button onClick={addToCartHandler} className='btn-block' type='button' disabled={product.countInStock === 0}>\r\n                                        Add To Cart\r\n                                    </Button>\r\n                                </ListGroup.Item>\r\n                            </ListGroup>\r\n                        </Card>\r\n                    </Col>\r\n                </Row>\r\n            )}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ProductView","import React, {useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Form, Button, Row, Col, Container } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message/Message'\r\nimport Loader from '../components/Loader/Loader'\r\nimport { login } from '../redux/user/user.actions'\r\n\r\nconst LoginView = ({ location, history }) => {\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const dispatch = useDispatch()\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n\r\n    const { loading, error, userInfo } = userLogin\r\n\r\n    const redirect = location.search ? location.search.split('=')[1] : '/'\r\n\r\n    useEffect(() => {\r\n        if (userInfo) {\r\n            history.push(redirect)\r\n        }\r\n    }, [history, userInfo, redirect])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(login(email, password))\r\n    }\r\n    return (\r\n        <Container>\r\n            <Row className='justify-content-md-center'>\r\n                <Col xs={10} md={6}>\r\n                    <h1>Sing In</h1>\r\n                    {error && (<Message variant='danger'>{error}</Message>)}\r\n                    {loading && <Loader />}\r\n                    <Form onSubmit={submitHandler}>\r\n                    <Form.Group controlId='email'>\r\n                        <Form.Label>Email Address</Form.Label>\r\n                        <Form.Control \r\n                            type='email' \r\n                            placeholder='Enter email' \r\n                            value={email}\r\n                            onChange={(e) => setEmail(e.target.value)}></Form.Control>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId='password'>\r\n                        <Form.Label>Password</Form.Label>\r\n                        <Form.Control \r\n                            type='password' \r\n                            placeholder='Enter password' \r\n                            value={password}\r\n                            onChange={(e) => setPassword(e.target.value)}></Form.Control>\r\n                    </Form.Group>\r\n\r\n                    <Button type='submit' variant='primary'>Sing In</Button>\r\n                </Form>\r\n                <Row className='py-3'>\r\n                    <Col>\r\n                        New Customer? \r\n                        <Link to={redirect ? `/register?redirec=${redirect}` : '/register'}>\r\n                            Register\r\n                        </Link>\r\n                    </Col>\r\n                </Row>\r\n                </Col>\r\n            </Row>            \r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default LoginView\r\n","import React, {useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Form, Button, Row, Col, Container } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message/Message'\r\nimport Loader from '../components/Loader/Loader'\r\nimport { register } from '../redux/user/user.actions'\r\n\r\nconst RegisterView = ({ location, history }) => {\r\n\r\n    const [name, setName] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [confirmPassword, setConfirmPassword] = useState('')\r\n    const [message, setMessage] = useState(null)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const userRegister = useSelector(state => state.userRegister)\r\n\r\n    const { loading, error, userInfo } = userRegister\r\n\r\n    const redirect = location.search ? location.search.split('=')[1] : '/'\r\n\r\n    useEffect(() => {\r\n        if (userInfo) {\r\n            history.push(redirect)\r\n        }\r\n    }, [history, userInfo, redirect])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        if(password !== confirmPassword) {\r\n            setMessage('Passwords do not match')\r\n        } else {\r\n            dispatch(register(name, email, password))\r\n        }\r\n    }\r\n    \r\n    return (\r\n        <Container>\r\n            <Row className='justify-content-md-center'>\r\n                <Col xs={10} md={6}>\r\n                    <h1>Sing Up</h1>\r\n                    {message && (<Message variant='danger'>{message}</Message>)}\r\n                    {error && (<Message variant='danger'>{error}</Message>)}\r\n                    {loading && <Loader />}\r\n                    <Form onSubmit={submitHandler}>\r\n                        <Form.Group controlId='name'>\r\n                            <Form.Label>Name</Form.Label>\r\n                            <Form.Control \r\n                                type='name' \r\n                                placeholder='Enter name' \r\n                                value={name}\r\n                                onChange={(e) => setName(e.target.value)}></Form.Control>\r\n                        </Form.Group>\r\n                        <Form.Group controlId='email'>\r\n                            <Form.Label>Email Address</Form.Label>\r\n                            <Form.Control \r\n                                type='email' \r\n                                placeholder='Enter email' \r\n                                value={email}\r\n                                onChange={(e) => setEmail(e.target.value)}></Form.Control>\r\n                        </Form.Group>\r\n\r\n                        <Form.Group controlId='password'>\r\n                            <Form.Label>Password</Form.Label>\r\n                            <Form.Control \r\n                                type='password' \r\n                                placeholder='Enter password' \r\n                                value={password}\r\n                                onChange={(e) => setPassword(e.target.value)}></Form.Control>\r\n                        </Form.Group>\r\n                        <Form.Group controlId='confirmPassword'>\r\n                            <Form.Label>Confirm Password</Form.Label>\r\n                            <Form.Control \r\n                                type='password' \r\n                                placeholder='Enter password' \r\n                                value={confirmPassword}\r\n                                onChange={(e) => setConfirmPassword(e.target.value)}></Form.Control>\r\n                        </Form.Group>\r\n\r\n                        <Button type='submit' variant='primary'>Register</Button>\r\n                    </Form>\r\n                    <Row className='py-3'>\r\n                        <Col>\r\n                            Have an Account? \r\n                            <Link to={redirect ? `/login?redirec=${redirect}` : '/register'}>\r\n                                Login\r\n                            </Link>\r\n                        </Col>\r\n                    </Row>\r\n                </Col>\r\n            </Row>            \r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default RegisterView\r\n","const CartActionTypes = {\r\n    CART_ADD_ITEM: 'CART_ADD_ITEM',\r\n    CART_REMOVE_ITEM: 'CART_REMOVE_ITEM',\r\n    CART_SAVE_SHIPPING_ADDRESS: 'CART_SAVE_SHIPPING_ADDRESS',\r\n    CART_SAVE_PAYMENT_METHOD: 'CART_SAVE_PAYMENT_METHOD'\r\n};\r\n\r\nexport default CartActionTypes;","import axios from 'axios'\r\nimport CartActionTypes from './cart.types'\r\n\r\nexport const addToCart = (id, qty) => async (dispatch, getState) => {\r\n    const { data } = await axios.get(`/api/products/${id}`)\r\n\r\n    dispatch({\r\n        type: CartActionTypes.CART_ADD_ITEM,\r\n        payload: {\r\n            product: data._id,\r\n            name: data.name,\r\n            image: data.image,\r\n            price: data.price,\r\n            countInStock: data.countInStock,\r\n            qty\r\n        }\r\n    })\r\n\r\n    localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems))\r\n}\r\n\r\nexport const removeFromCart = (id) => (dispatch, getState) => {\r\n    dispatch({\r\n        type: CartActionTypes.CART_REMOVE_ITEM,\r\n        payload: id\r\n    })\r\n\r\n    localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems))\r\n}\r\n\r\nexport const saveShippingAddress = (data) => (dispatch) => {\r\n    dispatch({\r\n        type: CartActionTypes.CART_SAVE_SHIPPING_ADDRESS,\r\n        payload: data\r\n    })\r\n    localStorage.setItem('shippingAddress', JSON.stringify(data))\r\n}\r\n\r\nexport const savePaymentMethod = (data) => (dispatch) => {\r\n    dispatch({\r\n        type: CartActionTypes.CART_SAVE_PAYMENT_METHOD,\r\n        payload: data\r\n    })\r\n    localStorage.setItem('paymentMethod', JSON.stringify(data))\r\n}","import React, { useEffect } from 'react'\r\nimport {Link } from 'react-router-dom'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { addToCart, removeFromCart } from '../redux/cart/cart.actions'\r\n\r\nimport Message from '../components/Message/Message'\r\nimport { Row, Col, ListGroup, Image, Form, Button, Card } from 'react-bootstrap'\r\n\r\nconst CartView =  ({ match, location, history }) => {\r\n    const productId = match.params.id\r\n    const qty = location.search ? Number(location.search.split('=')[1]) : 1\r\n    const dispatch = useDispatch()\r\n\r\n    const cart = useSelector(state => state.cart)\r\n\r\n    const { cartItems } = cart\r\n\r\n    useEffect(() => {\r\n        if (productId) {\r\n            dispatch(addToCart(productId, qty))\r\n        }\r\n    }, [dispatch, productId, qty])\r\n\r\n    const removeFromCartHandler = (id) => {\r\n       dispatch(removeFromCart(id))\r\n    }\r\n\r\n    const checkoutHandler = () => {\r\n        history.push('/login?redirect=shipping')\r\n    }\r\n\r\n    return (\r\n        <Row>\r\n            <Col md={8}>\r\n                <h1>Shopping Cart</h1>\r\n                {cartItems.length === 0 \r\n                    ? (<Message>Your cart is empty <Link to='/'>Go Back</Link></Message>)\r\n                    : (\r\n                        <ListGroup variant='flush'>\r\n                            {cartItems.map(item => (\r\n                                <ListGroup.Item key={item.product}>\r\n                                    <Row>\r\n                                        <Col md={2}>\r\n                                            <Image src={item.image} alt={item.name} fluid rounded />\r\n                                        </Col>\r\n                                        <Col md={3}>\r\n                                            <Link to={`/product/${item.product}`}>{item.name}</Link>\r\n                                        </Col>\r\n                                        <Col md={2}>${item.price}</Col>\r\n                                        <Col md={2}>\r\n                                        <Form.Control as='select' value={item.qty} \r\n                                                    onChange={(e) => dispatch(addToCart(item.product, Number(e.target.value)))}>\r\n                                                {\r\n                                                    [...Array(item.countInStock).keys()].map(x => (\r\n                                                        <option key={x + 1} value={x + 1}>\r\n                                                            {x + 1}\r\n                                                        </option>\r\n                                                    ))\r\n                                                }\r\n                                        </Form.Control>\r\n                                        </Col>\r\n                                        <Col md={2}>\r\n                                            <Button type='button' variant='light' \r\n                                                onClick={() => removeFromCartHandler(item.product)}><i className='fas fa-trash'></i>\r\n                                            </Button>\r\n                                        </Col>\r\n                                    </Row>\r\n                                </ListGroup.Item>\r\n                            ))}\r\n                        </ListGroup>\r\n                    )}\r\n            </Col>            \r\n            <Col md={4}>\r\n                <Card>\r\n                    <ListGroup variant='flush'>\r\n                        <ListGroup.Item >\r\n                            <h3>Subtotal ({cartItems.reduce((acc, item) => acc + item.qty, 0)}) items</h3>\r\n                            ${cartItems\r\n                                .reduce((acc, item) => acc + item.qty * item.price, 0)\r\n                                .toFixed(2)}\r\n                        </ListGroup.Item>\r\n                        <ListGroup.Item>\r\n                            <Button \r\n                                type='button' \r\n                                className='btn-block' \r\n                                disabled={cartItems.length === 0}\r\n                                onClick={checkoutHandler}>\r\n                                Proceed To Chechouk\r\n                            </Button>\r\n                        </ListGroup.Item>\r\n                    </ListGroup>\r\n                </Card>\r\n            </Col>\r\n        </Row>\r\n    )\r\n}\r\n\r\nexport default CartView\r\n","import React, {useState, useEffect } from 'react'\r\nimport { Form, Button, Row, Col, Table } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message/Message'\r\nimport Loader from '../components/Loader/Loader'\r\nimport { getUserDetails, updateUserProfile } from '../redux/user/user.actions'\r\nimport { listMyOrders } from '../redux/Order/order.actions'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\n\r\nconst ProfileView = ({ location, history }) => {\r\n    const [name, setName] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [confirmPassword, setConfirmPassword] = useState('')\r\n    const [message, setMessage] = useState(null)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const userDetails = useSelector(state => state.userDetails)\r\n    const { loading, error, user } = userDetails\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    const userUpdateProfile = useSelector(state => state.userUpdateProfile)\r\n    const { success } = userUpdateProfile\r\n\r\n    const orderListMy = useSelector(state => state.orderListMy)\r\n    const { loading: loadingOrders, error: errorOrders, orders } = orderListMy\r\n\r\n    useEffect(() => {\r\n        if (!userInfo) {\r\n            history.push('/login')\r\n        } else {\r\n            if(!user.name) {\r\n                dispatch(getUserDetails('profile'))\r\n                dispatch(listMyOrders())\r\n            } else {\r\n                setName(user.name)\r\n                setEmail(user.email)\r\n            }\r\n        }\r\n    }, [dispatch, history, userInfo, user])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        if(password !== confirmPassword) {\r\n            setMessage('Passwords do not match')\r\n        } else {\r\n           dispatch(updateUserProfile({ id: user._id, name, email, password}))\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Row>\r\n            <Col md={3}>\r\n                <h2>User Profile</h2>  \r\n                {message && (<Message variant='danger'>{message}</Message>)}\r\n                {error && (<Message variant='danger'>{error}</Message>)}\r\n                {success && (<Message variant='success'>Profile Updated</Message>)}\r\n                {loading && <Loader />}              \r\n                <Form onSubmit={submitHandler}>\r\n                    <Form.Group controlId='name'>\r\n                        <Form.Label>Name</Form.Label>\r\n                        <Form.Control \r\n                            type='name' \r\n                            placeholder='Enter name' \r\n                            value={name}\r\n                            onChange={(e) => setName(e.target.value)}></Form.Control>\r\n                    </Form.Group>\r\n                    <Form.Group controlId='email'>\r\n                        <Form.Label>Email Address</Form.Label>\r\n                        <Form.Control \r\n                            type='email' \r\n                            placeholder='Enter email' \r\n                            value={email}\r\n                            onChange={(e) => setEmail(e.target.value)}></Form.Control>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId='password'>\r\n                        <Form.Label>Password</Form.Label>\r\n                        <Form.Control \r\n                            type='password' \r\n                            placeholder='Enter password' \r\n                            value={password}\r\n                            onChange={(e) => setPassword(e.target.value)}></Form.Control>\r\n                    </Form.Group>\r\n                    <Form.Group controlId='confirmPassword'>\r\n                        <Form.Label>Confirm Password</Form.Label>\r\n                        <Form.Control \r\n                            type='password' \r\n                            placeholder='Enter password' \r\n                            value={confirmPassword}\r\n                            onChange={(e) => setConfirmPassword(e.target.value)}></Form.Control>\r\n                    </Form.Group>\r\n\r\n                    <Button type='submit' variant='primary'>Update</Button>\r\n                </Form>\r\n            </Col>\r\n            <Col md={9}>\r\n                <h2>My Orders</h2>\r\n                {loadingOrders ? <Loader /> : errorOrders \r\n                ? <Message variant='danger'>{errorOrders}</Message> \r\n                : (\r\n                    <Table striped bordered hover responsive className='table-sm'>\r\n                        <thead>\r\n                            <tr>\r\n                                <th>ID</th>\r\n                                <th>DATE</th>\r\n                                <th>TOTAL</th>\r\n                                <th>PAID</th>\r\n                                <th>DELIVERED</th>\r\n                                <th></th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {orders.map(order => (\r\n                                <tr key={order._id}>\r\n                                    <td>{order._id}</td>\r\n                                    <td>{order.createdAt.substring(0, 10)}</td>\r\n                                    <td>{order.totalPrice}</td>\r\n                                    <td>{order.isPaid ? order.paidAt.substring(0, 10) : (\r\n                                        <i className='fas fa-times' style={{ color: 'red'}}></i>\r\n                                    )}</td>\r\n                                    <td>{order.isDelivered ? order.deliveredAt.substring(0, 10) : (\r\n                                        <i className='fas fa-times' style={{ color: 'red'}}></i>\r\n                                    )}</td>\r\n                                    <td>\r\n                                        <LinkContainer to={`/order/${order._id}`}>\r\n                                            <Button className='btn-sm' variant='light'>Details</Button>\r\n                                        </LinkContainer>\r\n                                    </td>\r\n                                </tr>\r\n                            ))}\r\n                        </tbody>\r\n                    </Table>\r\n                )}\r\n            </Col>\r\n        </Row>\r\n    )\r\n}\r\n\r\nexport default ProfileView\r\n","import axios from 'axios'\r\nimport OrderActionTypes from './order.types'\r\n\r\nexport const createOrder = (order) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: OrderActionTypes.ORDER_CREATE_REQUEST,\r\n        })\r\n\r\n        const { userLogin: { userInfo }} = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n        const { data } = await axios.post(`/api/orders`, order, config)\r\n\r\n        dispatch({\r\n            type: OrderActionTypes.ORDER_CREATE_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: OrderActionTypes.ORDER_CREATE_FAIL,\r\n            payload: \r\n                error.response && error.response.data.message \r\n                ? error.response.data.message\r\n                : error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const getOrderDetails = (id) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: OrderActionTypes.ORDER_DETAILS_REQUEST,\r\n        })\r\n\r\n        const { userLogin: { userInfo }} = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n        const { data } = await axios.get(`/api/orders/${id}`, config)\r\n\r\n        dispatch({\r\n            type: OrderActionTypes.ORDER_DETAILS_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: OrderActionTypes.ORDER_DETAILS_FAIL,\r\n            payload: \r\n                error.response && error.response.data.message \r\n                ? error.response.data.message\r\n                : error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const payOrder = (orderId, paymentResult) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: OrderActionTypes.ORDER_PAY_REQUEST,\r\n        })\r\n\r\n        const { userLogin: { userInfo }} = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n        const { data } = await axios.put(`/api/orders/${orderId}/pay`, paymentResult, config)\r\n\r\n        dispatch({\r\n            type: OrderActionTypes.ORDER_PAY_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: OrderActionTypes.ORDER_PAY_FAIL,\r\n            payload: \r\n                error.response && error.response.data.message \r\n                ? error.response.data.message\r\n                : error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const listMyOrders = () => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: OrderActionTypes.ORDER_LIST_MY_REQUEST,\r\n        })\r\n\r\n        const { userLogin: { userInfo }} = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n        const { data } = await axios.get(`/api/orders/myorders`, config)\r\n\r\n        dispatch({\r\n            type: OrderActionTypes.ORDER_LIST_MY_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: OrderActionTypes.ORDER_LIST_MY_FAIL,\r\n            payload: \r\n                error.response && error.response.data.message \r\n                ? error.response.data.message\r\n                : error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const listOrders = () => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: OrderActionTypes.ORDER_LIST_REQUEST,\r\n        })\r\n\r\n        const { userLogin: { userInfo }} = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n        const { data } = await axios.get(`/api/orders`, config)\r\n\r\n        dispatch({\r\n            type: OrderActionTypes.ORDER_LIST_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: OrderActionTypes.ORDER_LIST_FAIL,\r\n            payload: \r\n                error.response && error.response.data.message \r\n                ? error.response.data.message\r\n                : error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const deliverOrder = (orderId) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: OrderActionTypes.ORDER_DELIVER_REQUEST,\r\n        })\r\n\r\n        const { userLogin: { userInfo }} = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n        const { data } = await axios.put(`/api/orders/${orderId}/deliver`, {}, config)\r\n\r\n        dispatch({\r\n            type: OrderActionTypes.ORDER_DELIVER_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: OrderActionTypes.ORDER_DELIVER_FAIL,\r\n            payload: \r\n                error.response && error.response.data.message \r\n                ? error.response.data.message\r\n                : error.message\r\n        })\r\n    }\r\n}","import React from 'react'\r\nimport { Container, Row, Col } from 'react-bootstrap'\r\n\r\nconst Footer = () => {\r\n    return (\r\n        <footer>\r\n            <Container>\r\n                <Row>\r\n                    <Col className='text-center py-3'>\r\n                        Copyright by Kulnois\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        </footer>\r\n    )\r\n}\r\n\r\nexport default Footer\r\n","import React, {useState, useEffect } from 'react'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { Table, Button } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message/Message'\r\nimport Loader from '../components/Loader/Loader'\r\nimport { listOrders } from '../redux/Order/order.actions'\r\n\r\nconst OrderListView = ({ history }) => {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const orderList = useSelector(state => state.orderList)\r\n    const { loading, error, orders } = orderList\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    useEffect(() => {\r\n        if (userInfo && userInfo.isAdmin) {\r\n            dispatch(listOrders())\r\n        } else {\r\n            history.push('/login')\r\n        }\r\n    }, [dispatch, history, userInfo])\r\n\r\n    return (\r\n        <>\r\n            <h1>Orders</h1>\r\n            {loading ? <Loader /> : error ? <Message variant='danger'>{error}</Message>\r\n            : (\r\n                <Table striped bordered hover responsive className='table-sm'>\r\n                    <thead>\r\n                        <tr>\r\n                            <th>ID</th>\r\n                            <th>USER</th>\r\n                            <th>DATE</th>\r\n                            <th>TOTAL</th>\r\n                            <th>PAID</th>\r\n                            <th>DELIVERED</th>\r\n                            <th></th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {orders.map(order => (\r\n                            <tr key={order._id}>\r\n                                <td>{order._id}</td>\r\n                                <td>{order.user && order.user.name}</td>\r\n                                <td>{order.createdAt.substring(0, 10)}</td>\r\n                                <td>${order.totalPrice}</td>\r\n                                <td>\r\n                                    {order.isPaid ? (order.paidAt.substring(0,10))\r\n                                    : (\r\n                                        <i className='fas fa-times' style={{color: 'red'}}></i>\r\n                                    ) }\r\n                                </td>\r\n                                <td>\r\n                                    {order.isDelivered ? (order.deliveredAt.substring(0,10))\r\n                                    : (\r\n                                        <i className='fas fa-times' style={{color: 'red'}}></i>\r\n                                    ) }\r\n                                </td>\r\n                                <td>\r\n                                    <LinkContainer to={`/order/${order._id}/edit`}>\r\n                                        <Button variant='light' className='btn-sm'>\r\n                                            Details\r\n                                        </Button>\r\n                                    </LinkContainer>\r\n\r\n                                </td>\r\n                            </tr>\r\n                        ))}\r\n                    </tbody>\r\n                </Table>\r\n            )}  \r\n        </>\r\n    )\r\n}\r\n\r\nexport default OrderListView","import React, { useState, useEffect } from 'react'\r\nimport axios from 'axios'\r\nimport { PayPalButton } from 'react-paypal-button-v2'\r\nimport { Link } from 'react-router-dom'\r\nimport { Row, Col, ListGroup, Image, Card, Button } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message/Message'\r\nimport Loader from '../components/Loader/Loader'\r\nimport { getOrderDetails, payOrder, deliverOrder } from '../redux/Order/order.actions'\r\nimport OrderActionTypes from '../redux/Order/order.types'\r\n\r\nconst OrderView = ({ match, history }) => {\r\n\r\n    const orderId = match.params.id\r\n\r\n    const dispatch = useDispatch() \r\n\r\n    const [sdkReady, setSdkReady] = useState(false)\r\n\r\n    \r\n    const orderDetails = useSelector(state => state.orderDetails)\r\n    const { order, loading, error} = orderDetails\r\n\r\n    const orderPay = useSelector(state => state.orderPay)\r\n    const { loading: loadingPay, success: successPay } = orderPay\r\n\r\n    const orderDeliver = useSelector(state => state.orderDeliver)\r\n    const { loading: loadingDeliver, success: successDeliver } = orderDeliver\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    if (!loading) {\r\n        const addDecimals = (num) => {\r\n            return (Math.round(num * 100) / 100).toFixed(2)\r\n        }\r\n        order.itemsPrice = addDecimals(\r\n            order.orderItems.reduce((acc, item) => acc + item.price * item.qty, 0)\r\n        )\r\n    }\r\n    \r\n    useEffect(() => {\r\n        if (!userInfo) {\r\n            history.push('/login')\r\n        }\r\n        const addPayPalScrip = async () => {\r\n            const { data: clientId } = await axios.get('/api/config/paypal')\r\n            const script = document.createElement('script')\r\n            script.type = 'text/javascrip'\r\n            script.src = `https://www.paypal.com/sdk/js?client-id=${clientId}`\r\n            script.async = true\r\n            script.onload = () => {\r\n                setSdkReady(true)\r\n            } \r\n            document.body.appendChild(script)\r\n            setSdkReady(true)\r\n        }\r\n\r\n        if (!order || successPay || successDeliver) {\r\n            dispatch({ type: OrderActionTypes.ORDER_PAY_RESET})\r\n            dispatch({ type: OrderActionTypes.ORDER_DELIVER_RESET})\r\n            dispatch(getOrderDetails(orderId))\r\n        } else if(!order.isPaid) {\r\n            if(!window.paypal) {\r\n                addPayPalScrip()\r\n            } else {\r\n                setSdkReady(true)\r\n            }\r\n        }\r\n    }, [dispatch, orderId, successPay, successDeliver, order])\r\n\r\n    const successPaymentHandler = (paymentResutl) => {\r\n        console.log(paymentResutl)\r\n        dispatch(payOrder(orderId, paymentResutl))\r\n    }\r\n\r\n    const deliverHandler = () => {\r\n        dispatch(deliverOrder(order._id))\r\n    }\r\n\r\n    return loading ? <Loader /> : error ? <Message variant='danger'></Message> :\r\n        <>\r\n            <h1>Order {order._id}</h1>\r\n            <Row>\r\n                <Col md={8}>\r\n                    <ListGroup variant='flush'>\r\n                        <ListGroup.Item>\r\n                            <h2>Shipping</h2>\r\n                            <p><strong>Name: </strong> {order.user.name}</p>\r\n                            <p><strong>Email: </strong><a href={`mailto:${order.user.email}`}>{order.user.email}</a></p>                            \r\n                            <p>\r\n                                <strong>Address: </strong>\r\n                                {order.shippingAddress.address},  \r\n                                {order.shippingAddress.city}, \r\n                                {order.shippingAddress.postalCode},                                 \r\n                                {order.shippingAddress.country}\r\n                            </p>\r\n                            {order.isDelivered ? <Message variant='success'>Delivered on {order.deliveredAt}</Message> : \r\n                            <Message variant='danger'>Not Delivered</Message> }\r\n                        </ListGroup.Item>\r\n                        <ListGroup.Item>\r\n                            <h2>Payment Method</h2>\r\n                            <p>\r\n                                <strong>Method: </strong>\r\n                                {order.paymentMethod}\r\n                            </p>\r\n                            {order.isPaid ? <Message variant='success'>Paid on {order.paidAt}</Message> : \r\n                            <Message variant='danger'>Not Paid</Message> }\r\n                        </ListGroup.Item>\r\n                        <ListGroup.Item>\r\n                            <h2>Order Items</h2>\r\n                            {order.orderItems.length === 0 ? (\r\n                                <Message>Order is empty</Message>\r\n                            ) : (\r\n                                <ListGroup variant='flush'>\r\n                                    {order.orderItems.map((item, index) => (\r\n                                        <ListGroup.Item key={index}>\r\n                                            <Row>\r\n                                                <Col md={1}>\r\n                                                    <Image src={item.image} alt={item.name} fluid rounded />\r\n                                                </Col>\r\n                                                <Col>\r\n                                                    <Link to={`/product/${item.product}`}>\r\n                                                        {item.name}\r\n                                                    </Link>\r\n                                                </Col>\r\n                                                <Col md={4}>\r\n                                                    {item.qty} x ${item.price} = ${item.qty * item.price}\r\n                                                </Col>\r\n                                            </Row>\r\n                                        </ListGroup.Item>\r\n                                    ))}\r\n                                </ListGroup>\r\n                            )}\r\n                        </ListGroup.Item>\r\n                    </ListGroup>\r\n                </Col>\r\n                <Col md={4}>\r\n                    <Card>\r\n                        <ListGroup variant='flush'>\r\n                            <ListGroup.Item>\r\n                                <h2>Order Summary</h2>\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Items</Col>\r\n                                    <Col>${order.itemsPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Shipping</Col>\r\n                                    <Col>${order.shippingPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Tax</Col>\r\n                                    <Col>${order.taxPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>                            \r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Total</Col>\r\n                                    <Col>${order.totalPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n                            {!order.isPaid && (\r\n                                <ListGroup.Item>\r\n                                    {loadingPay && <Loader />}\r\n                                    {!sdkReady ? <Loader /> : (\r\n                                        <PayPalButton amount={order.totalPrice} onSuccess={successPaymentHandler} />\r\n                                    )}\r\n                                </ListGroup.Item>\r\n                            )}\r\n                            {loadingDeliver && <Loader />}\r\n                            {\r\n                                userInfo && userInfo.isAdmin && order.isPaid && !order.isDelivered && (\r\n                                    <ListGroup.Item>\r\n                                        <Button type='button' className={'btn btn-block'} onClick={deliverHandler}>\r\n                                            Mark As Deliver\r\n                                        </Button>\r\n                                    </ListGroup.Item>\r\n                                )\r\n                            }\r\n                        </ListGroup>\r\n                    </Card>\r\n                </Col>\r\n            </Row>\r\n        </>\r\n    \r\n}\r\n\r\nexport default OrderView","import React from 'react'\r\nimport { Nav } from 'react-bootstrap'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\n\r\nconst CheckoutSteps = ({ step1, step2, step3, step4 }) => {\r\n    return (\r\n        <Nav className='justify-content-center mb-4'>\r\n            <Nav.Item>\r\n                 {step1 ? (\r\n                     <LinkContainer to='/login'>\r\n                         <Nav.Link>Sign In</Nav.Link>\r\n                     </LinkContainer>\r\n                 ) : <Nav.Link disabled>Sing In</Nav.Link>}\r\n            </Nav.Item>\r\n            <Nav.Item>\r\n                 {step2 ? (\r\n                     <LinkContainer to='/shipping'>\r\n                         <Nav.Link>Shipping</Nav.Link>\r\n                     </LinkContainer>\r\n                 ) : <Nav.Link disabled>Shipping</Nav.Link>}\r\n            </Nav.Item>\r\n            <Nav.Item>\r\n                 {step3 ? (\r\n                     <LinkContainer to='/payment'>\r\n                         <Nav.Link>Payment</Nav.Link>\r\n                     </LinkContainer>\r\n                 ) : <Nav.Link disabled>Payment</Nav.Link>}\r\n            </Nav.Item>\r\n            <Nav.Item>\r\n                 {step4 ? (\r\n                     <LinkContainer to='/placeorder'>\r\n                         <Nav.Link>Placeorder</Nav.Link>\r\n                     </LinkContainer>\r\n                 ) : <Nav.Link disabled>Place Order</Nav.Link>}\r\n            </Nav.Item>\r\n        </Nav>\r\n    )\r\n}\r\n\r\nexport default CheckoutSteps\r\n","import React, {useState } from 'react'\r\nimport { Form, Button, Col, Container, Row } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport CheckoutSteps from '../components/CheckoutSteps/CheckoutSteps'\r\nimport { savePaymentMethod } from '../redux/cart/cart.actions'\r\n\r\nconst PaymentView = ({ history }) => {\r\n    \r\n    const cart = useSelector(state => state.cart)\r\n    const { shippingAddress } = cart\r\n\r\n    if(!shippingAddress) {\r\n        history.push('/shipping')\r\n    }\r\n\r\n    const [paymentMethod, setPaymentMethod] = useState('PayPal')\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(savePaymentMethod(paymentMethod))\r\n        history.push('/placeorder')\r\n    }\r\n    \r\n    return (\r\n        <Container>\r\n            <Row className='justify-content-md-center'>\r\n                <Col xs={10} md={6}>\r\n                <CheckoutSteps step1 step2 step3 />\r\n                    <h1>Payment Method</h1>\r\n                    <Form onSubmit={submitHandler}>\r\n                        <Form.Group>\r\n                            <Form.Label as='legend'>Select Method</Form.Label>\r\n                            <Col>\r\n                                <Form.Check type='radio' label='PayPal or Credit Card'\r\n                                id='Paypal' name='paymentMethod' value='PayPal' checked\r\n                                onChange={(e) => setPaymentMethod(e.target.value)}>\r\n                                </Form.Check>\r\n                                <Form.Check type='radio' label='Stripe'\r\n                                id='Stripe' name='paymentMethod' value='Stripe'\r\n                                onChange={(e) => setPaymentMethod(e.target.value)}>\r\n                                </Form.Check>\r\n                            </Col>\r\n                        \r\n                        </Form.Group>\r\n\r\n                        <Button type='submit' variant='primary'>Continue</Button>\r\n                    </Form>\r\n                </Col>\r\n            </Row>            \r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default PaymentView","import React, { useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Button, Row, Col, ListGroup, Image, Card } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message/Message'\r\nimport CheckoutSteps from '../components/CheckoutSteps/CheckoutSteps'\r\nimport { createOrder } from '../redux/Order/order.actions'\r\n\r\nconst PlaceOrderView = ({ history }) => {\r\n\r\n    const dispatch = useDispatch()\r\n    \r\n\r\n    const addDecimals = (num) => {\r\n        return (Math.round(num * 100) / 100).toFixed(2)\r\n    }\r\n\r\n    const cart = useSelector(state => state.cart)\r\n    cart.itemsPrice = addDecimals(\r\n        cart.cartItems.reduce((acc, item) => acc + item.price * item.qty, 0)\r\n    )\r\n    cart.shippingPrice = addDecimals(cart.cartItems > 100 ? 0 : 100)\r\n    cart.taxPrice = addDecimals(Number((0.15 * cart.itemsPrice).toFixed(2)))\r\n    cart.totalPrice = (Number(cart.itemsPrice) + Number(cart.shippingPrice) + Number(cart.taxPrice)).toFixed(2)\r\n\r\n\r\n    const orderCreate = useSelector(state => state.orderCreate)\r\n    const { order, success, error} = orderCreate\r\n\r\n    useEffect(() => {\r\n        if (success) {\r\n            history.push(`/order/${order._id}`)\r\n        }\r\n    }, [history, success])\r\n\r\n    const placeOrderHandler = () => {\r\n        dispatch(createOrder({\r\n            orderItems: cart.cartItems, \r\n            shippingAddress: cart.shippingAddress, \r\n            paymentMethod: cart.paymentMethod, \r\n            itemsPrice: cart.itemsPrice,\r\n            taxPrice: cart.taxPrice, \r\n            shippingPrice: cart.shippingPrice, \r\n            totalPrice: cart.totalPrice\r\n        }))\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <CheckoutSteps step1 step2 step3 step4 />\r\n            <Row>\r\n                <Col md={8}>\r\n                    <ListGroup variant='flush'>\r\n                        <ListGroup.Item>\r\n                            <h2>Shipping</h2>\r\n                            <p>\r\n                                <strong>Address: </strong>\r\n                                {cart.shippingAddress.address},  \r\n                                {cart.shippingAddress.city}, \r\n                                {cart.shippingAddress.postalCode},                                 \r\n                                {cart.shippingAddress.country}\r\n                            </p>\r\n                        </ListGroup.Item>\r\n                        <ListGroup.Item>\r\n                            <h2>Payment Method</h2>\r\n                            <strong>Method: </strong>\r\n                            {cart.paymentMethod}\r\n                        </ListGroup.Item>\r\n                        <ListGroup.Item>\r\n                            <h2>Order Items</h2>\r\n                            {cart.cartItems.length === 0 ? (\r\n                                <Message>Your cart is empty</Message>\r\n                            ) : (\r\n                                <ListGroup variant='flush'>\r\n                                    {cart.cartItems.map((item, index) => (\r\n                                        <ListGroup.Item key={index}>\r\n                                            <Row>\r\n                                                <Col md={1}>\r\n                                                    <Image src={item.image} alt={item.name} fluid rounded />\r\n                                                </Col>\r\n                                                <Col>\r\n                                                    <Link to={`/product/${item.product}`}>\r\n                                                        {item.name}\r\n                                                    </Link>\r\n                                                </Col>\r\n                                                <Col md={4}>\r\n                                                    {item.qty} x ${item.price} = ${item.qty * item.price}\r\n                                                </Col>\r\n                                            </Row>\r\n                                        </ListGroup.Item>\r\n                                    ))}\r\n                                </ListGroup>\r\n                            )}\r\n                        </ListGroup.Item>\r\n                    </ListGroup>\r\n                </Col>\r\n                <Col md={4}>\r\n                    <Card>\r\n                        <ListGroup variant='flush'>\r\n                            <ListGroup.Item active>\r\n                                <h2>Order Summary</h2>\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Items</Col>\r\n                                    <Col>${cart.itemsPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Shipping</Col>\r\n                                    <Col>${cart.shippingPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Tax</Col>\r\n                                    <Col>${cart.taxPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>                            \r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Total</Col>\r\n                                    <Col>${cart.totalPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                                    {error && <Message variant='danger'>{error}</Message>}\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                                <Button type='buttom' className='btn-block' disabled={cart.cartItems === 0}\r\n                                    onClick={placeOrderHandler}>Place Order</Button>\r\n                            </ListGroup.Item>\r\n                        </ListGroup>\r\n                    </Card>\r\n                </Col>\r\n            </Row>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default PlaceOrderView","import React, {useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Form, Button, Container, Row, Col } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message/Message'\r\nimport Loader from '../components/Loader/Loader'\r\nimport { listProductDetails, updateProduct } from '../redux/product/product.action'\r\nimport ProductActionTypes from '../redux/product/product.types'\r\n\r\nconst ProductEditView = ({ match, history }) => {\r\n\r\n    const productId = match.params.id\r\n\r\n    const [name, setName] = useState('')\r\n    const [price, setPrice] = useState(0)\r\n    const [image, setImage] = useState('')\r\n    const [brand, setBrand] = useState('')\r\n    const [category, setCategory] = useState('')\r\n    const [countInStock, setCountInStock] = useState(0)\r\n    const [description, setDescription] = useState('')\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const productDetails = useSelector(state => state.productDetails)\r\n    const { loading, error, product } = productDetails\r\n\r\n    const productUpdate = useSelector(state => state.productUpdate)\r\n    const { loading: loadingUpdate, error: errorUpdate, success: successUpdate } = productUpdate\r\n    \r\n    useEffect(() => {\r\n        if (product) {\r\n            if (successUpdate) {\r\n                dispatch({ type: ProductActionTypes.PRODUCT_UPDATE_RESET})\r\n                history.push('/admin/productlist')\r\n            } else {\r\n                if (!product.name || product._id !== productId) {\r\n                    dispatch(listProductDetails(productId))\r\n                } else {\r\n                    setName(product.name)\r\n                    setPrice(product.price)\r\n                    setImage(product.image)\r\n                    setBrand(product.brand)\r\n                    setCategory(product.category)\r\n                    setCountInStock(product.countInStock)\r\n                    setDescription(product.description)\r\n                }\r\n            }\r\n        }  \r\n    }, [dispatch, history, productId, product, successUpdate])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(updateProduct({\r\n            _id: productId,\r\n            name,\r\n            price,\r\n            image,\r\n            brand,\r\n            category, \r\n            description,\r\n            countInStock\r\n        }))\r\n    }\r\n    \r\n    return (\r\n        <>\r\n            <Link to='/admin/productlist' className='btn btn-light my-3'>\r\n                Go Back\r\n            </Link>\r\n            <Container>\r\n                <Row className='justify-content-md-center'>\r\n                    <Col xs={10} md={6}>\r\n                    <h1>Edit Product</h1>\r\n                    {loadingUpdate && <Loader />}\r\n                    {errorUpdate && <Message variant='danger'>{errorUpdate}</Message>}\r\n                    {loading ? <Loader /> : error ? (\r\n                        <Message variant='danger'>{error}</Message>\r\n                    ) : (\r\n                        <Form onSubmit={submitHandler}>\r\n                            <Form.Group controlId='name'>\r\n                                <Form.Label>Name</Form.Label>\r\n                                <Form.Control \r\n                                    type='text' \r\n                                    placeholder='Enter name' \r\n                                    value={name}\r\n                                    onChange={(e) => setName(e.target.value)}></Form.Control>\r\n                            </Form.Group>\r\n                            <Form.Group controlId='price'>\r\n                                <Form.Label>Price</Form.Label>\r\n                                <Form.Control \r\n                                    type='number' \r\n                                    placeholder='Enter price' \r\n                                    value={price}\r\n                                    onChange={(e) => setPrice(e.target.value)}></Form.Control>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='image'>\r\n                                <Form.Label>Image</Form.Label>\r\n                                <Form.Control \r\n                                    type='text' \r\n                                    placeholder='Enter image url' \r\n                                    value={image}\r\n                                    onChange={(e) => setImage(e.target.value)}></Form.Control>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='brand'>\r\n                                <Form.Label>Brand</Form.Label>\r\n                                <Form.Control \r\n                                    type='text' \r\n                                    placeholder='Enter brand' \r\n                                    value={brand}\r\n                                    onChange={(e) => setBrand(e.target.value)}></Form.Control>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='category'>\r\n                                <Form.Label>Category</Form.Label>\r\n                                <Form.Control \r\n                                    type='text' \r\n                                    placeholder='Enter category' \r\n                                    value={category}\r\n                                    onChange={(e) => setCategory(e.target.value)}></Form.Control>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='countInStock'>\r\n                                <Form.Label>Count In Stock</Form.Label>\r\n                                <Form.Control \r\n                                    type='number' \r\n                                    placeholder='Enter countInStock' \r\n                                    value={countInStock}\r\n                                    onChange={(e) => setCountInStock(e.target.value)}></Form.Control>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='description'>\r\n                                <Form.Label>Description</Form.Label>\r\n                                <Form.Control \r\n                                    type='text' \r\n                                    placeholder='Enter description' \r\n                                    value={description}\r\n                                    onChange={(e) => setDescription(e.target.value)}></Form.Control>\r\n                            </Form.Group>\r\n\r\n                            <Button type='submit' variant='primary'>Update</Button>\r\n                        </Form>  \r\n                    )}   \r\n                    </Col>\r\n                </Row>            \r\n            </Container>\r\n        </>        \r\n    )\r\n}\r\n\r\nexport default ProductEditView","import React, {useState, useEffect } from 'react'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { Table, Button, Row, Col } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message/Message'\r\nimport Loader from '../components/Loader/Loader'\r\nimport { listProducts, deleteProduct, createProduct } from '../redux/product/product.action'\r\nimport ProductActionTypes from '../redux/product/product.types'\r\n\r\nconst ProductListView = ({ history, match }) => {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const productList = useSelector(state => state.productList)\r\n    const { loading, error, products } = productList\r\n\r\n    const productDelete = useSelector(state => state.productDelete)\r\n    const { loading: loadingDelete, error: errorDelete, success: successDelete  } = productDelete\r\n\r\n    const productCreate = useSelector(state => state.productCreate)\r\n    const { loading: loadingCreate, error: errorCreate, success: successCreate, product: createdProduct  } = productCreate\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    useEffect(() => {\r\n        dispatch({ type: ProductActionTypes.PRODUCT_CREATE_RESET})\r\n        if (!userInfo.isAdmin) {\r\n            history.push('/login')\r\n        }\r\n\r\n        if (successCreate) {\r\n            history.push(`/admin/product/${createdProduct._id}/edit`)\r\n        } else {\r\n            dispatch(listProducts())\r\n        }\r\n    }, [dispatch, history, userInfo, successDelete, successCreate, createdProduct])\r\n\r\n    const deleteHandler = (id) => {\r\n        if (window.confirm('Are you sure')) {\r\n            dispatch(deleteProduct(id))\r\n        }\r\n    }\r\n\r\n    const createProductHandler = (product) => {\r\n        dispatch(createProduct())\r\n    }\r\n    return (\r\n        <>\r\n            <Row className='align-items-center'>\r\n                <Col>\r\n                    <h1>Products</h1>\r\n                </Col>\r\n                <Col className='text-right'>\r\n                    <Button className='my-3' onClick={createProductHandler}>\r\n                        <i className='fas fa-plus'></i> Create Product\r\n                    </Button>\r\n                </Col>\r\n            </Row>\r\n            {loadingDelete && <Loader />}\r\n            {errorDelete && <Message variant='danger'>{errorDelete}</Message>}\r\n            {loadingCreate && <Loader />}\r\n            {errorCreate && <Message variant='danger'>{errorCreate}</Message>}\r\n            {loading ? <Loader /> : error ? <Message variant='danger'>{error}</Message>\r\n            : (\r\n                <Table striped bordered hover responsive className='table-sm'>\r\n                    <thead>\r\n                        <tr>\r\n                            <th>ID</th>\r\n                            <th>NAME</th>\r\n                            <th>PRICE</th>\r\n                            <th>CATEGORY</th>\r\n                            <th>BRAND</th>\r\n                            <th></th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {products.map(product => (\r\n                            <tr key={product._id}>\r\n                                <td>{product._id}</td>\r\n                                <td>{product.name}</td>\r\n                                <td>${product.price}</td>\r\n                                <td>\r\n                                    {product.category}\r\n                                </td>\r\n                                <td>\r\n                                    {product.brand}\r\n                                </td>\r\n                                <td>\r\n                                    <LinkContainer to={`/admin/product/${product._id}/edit`}>\r\n                                        <Button variant='light' className='btn-sm'>\r\n                                            <i className='fas fa-edit'></i>\r\n                                        </Button>\r\n                                    </LinkContainer>\r\n                                    <Button variant='danger' className='btn-sm' onClick={() => deleteHandler(product._id)}>\r\n                                        <i className='fas fa-trash'></i>\r\n                                    </Button>\r\n                                </td>\r\n                            </tr>\r\n                        ))}\r\n                    </tbody>\r\n                </Table>\r\n            )}  \r\n        </>\r\n    )\r\n}\r\n\r\nexport default ProductListView","import React, {useState } from 'react'\r\nimport { Form, Button, Container, Row, Col } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport CheckoutSteps from '../components/CheckoutSteps/CheckoutSteps'\r\nimport { saveShippingAddress } from '../redux/cart/cart.actions'\r\n\r\nconst ShippingView = ({ history }) => {\r\n    \r\n    const cart = useSelector(state => state.cart)\r\n    const { shippingAddress } = cart\r\n\r\n    const [address, setAddress] = useState(shippingAddress.address)\r\n    const [city, setCity] = useState(shippingAddress.city)\r\n    const [postalCode, setPostalCode] = useState(shippingAddress.postalCode)\r\n    const [country, setCountry] = useState(shippingAddress.country)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(saveShippingAddress({ address, city, postalCode, country}))\r\n        history.push('payment')\r\n    }\r\n    \r\n    return (\r\n        <Container>\r\n            <Row className='justify-content-md-center'>\r\n                <Col xs={10} md={6}>\r\n                    <CheckoutSteps step1 step2 />\r\n                    <h1>Shipping</h1>\r\n                    <Form onSubmit={submitHandler}>\r\n                        <Form.Group controlId='address'>\r\n                            <Form.Label>Address</Form.Label>\r\n                            <Form.Control \r\n                                type='text'\r\n                                required \r\n                                placeholder='Enter address' \r\n                                value={address}\r\n                                onChange={(e) => setAddress(e.target.value)}></Form.Control>\r\n                        </Form.Group>\r\n\r\n                        <Form.Group controlId='city'>\r\n                            <Form.Label>City</Form.Label>\r\n                            <Form.Control \r\n                                type='text'\r\n                                required \r\n                                placeholder='Enter city' \r\n                                value={city}\r\n                                onChange={(e) => setCity(e.target.value)}></Form.Control>\r\n                        </Form.Group>\r\n\r\n                        <Form.Group controlId='postalCode'>\r\n                            <Form.Label>Postal Code</Form.Label>\r\n                            <Form.Control \r\n                                type='text'\r\n                                required \r\n                                placeholder='Enter postal code' \r\n                                value={postalCode}\r\n                                onChange={(e) => setPostalCode(e.target.value)}></Form.Control>\r\n                        </Form.Group>\r\n\r\n                        <Form.Group controlId='country'>\r\n                            <Form.Label>Country</Form.Label>\r\n                            <Form.Control \r\n                                type='text'\r\n                                required \r\n                                placeholder='Enter country' \r\n                                value={country}\r\n                                onChange={(e) => setCountry(e.target.value)}></Form.Control>\r\n                        </Form.Group>\r\n\r\n                        <Button type='submit' variant='primary'>Continue</Button>\r\n                    </Form>\r\n                </Col>\r\n            </Row>            \r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default ShippingView","import React, {useState, useEffect } from 'react'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { Table, Button } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message/Message'\r\nimport Loader from '../components/Loader/Loader'\r\nimport { listUsers, deleteUser } from '../redux/user/user.actions'\r\n\r\nconst UserListView = ({ history }) => {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const userList = useSelector(state => state.userList)\r\n    const { loading, error, users } = userList\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    const userDelete = useSelector(state => state.userDelete)\r\n    const { success: successDelete } = userDelete\r\n\r\n    useEffect(() => {\r\n        if (userInfo && userInfo.isAdmin) {\r\n            dispatch(listUsers())\r\n        } else {\r\n            history.push('/login')\r\n        }\r\n    }, [dispatch, history, successDelete, userInfo])\r\n\r\n    const deleteHandler = (idUser) => {\r\n        if (window.confirm('Are you sure')) {\r\n            dispatch(deleteUser(idUser))\r\n        }\r\n    }\r\n    return (\r\n        <>\r\n            <h1>Users</h1>\r\n            {loading ? <Loader /> : error ? <Message variant='danger'>{error}</Message>\r\n            : (\r\n                <Table striped bordered hover responsive className='table-sm'>\r\n                    <thead>\r\n                        <tr>\r\n                            <th>ID</th>\r\n                            <th>NAME</th>\r\n                            <th>EMAIL</th>\r\n                            <th>ADMIN</th>\r\n                            <th></th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {users.map(user => (\r\n                            <tr key={user._id}>\r\n                                <td>{user._id}</td>\r\n                                <td>{user.name}</td>\r\n                                <td><a href={`mailto:${user.email}`}>{user.email}</a></td>\r\n                                <td>\r\n                                    {user.isAdmin ? (<i className='fas fa-check' style={{color: 'green'}}></i>)\r\n                                    : (\r\n                                        <i className='fas fa-times' style={{color: 'red'}}></i>\r\n                                    ) }\r\n                                </td>\r\n                                <td>\r\n                                    <LinkContainer to={`/admin/user/${user._id}/edit`}>\r\n                                        <Button variant='light' className='btn-sm'>\r\n                                            <i className='fas fa-edit'></i>\r\n                                        </Button>\r\n                                    </LinkContainer>\r\n                                    <Button variant='danger' className='btn-sm' onClick={() => deleteHandler(user._id)}>\r\n                                        <i className='fas fa-trash'></i>\r\n                                    </Button>\r\n                                </td>\r\n                            </tr>\r\n                        ))}\r\n                    </tbody>\r\n                </Table>\r\n            )}  \r\n        </>\r\n    )\r\n}\r\n\r\nexport default UserListView","import React, {useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Form, Button, Container, Row, Col } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message/Message'\r\nimport Loader from '../components/Loader/Loader'\r\nimport { getUserDetails, updateUser } from '../redux/user/user.actions'\r\nimport UserActionTypes from '../redux/user/user.types'\r\n\r\nconst UserEditView = ({ match, history }) => {\r\n\r\n    const userId = match.params.id\r\n\r\n    const [name, setName] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    const [isAdmin, setIsAdmin] = useState(false)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const userDetails = useSelector(state => state.userDetails)\r\n    const { loading, error, user } = userDetails\r\n\r\n    const userUpdate = useSelector(state => state.userUpdate)\r\n    const { loading: loadingUpdate, error: errorUpdate, success: successUpdate } = userUpdate\r\n\r\n    useEffect(() => {\r\n        if(successUpdate) {\r\n            dispatch({type: UserActionTypes.USER_UPDATE_RESET })\r\n            history.push('/admin/userlist')\r\n        } else {\r\n            if (user) {\r\n                if (!user.name || user._id !== userId) {\r\n                    dispatch(getUserDetails(userId))\r\n                } else {\r\n                    setName(user.name)\r\n                    setEmail(user.email)\r\n                    setIsAdmin(user.isAdmin)\r\n                }\r\n            }\r\n        }       \r\n    }, [dispatch, history, userId, user, successUpdate])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(updateUser({ _id: userId, name, email, isAdmin }))\r\n    }\r\n    \r\n    return (\r\n        <>\r\n            <Link to='/admin/userlist' className='btn btn-light my-3'>\r\n                Go Back\r\n            </Link>\r\n            <Container>\r\n                <Row className='justify-content-md-center'>\r\n                    <Col xs={10} md={6}>\r\n                        <h1>Edit User</h1>\r\n                        {loadingUpdate && <Loader />}\r\n                        {errorUpdate && <Message variant='danger'>{errorUpdate}</Message>}\r\n                        {loading ? <Loader /> : error ? (\r\n                            <Message variant='danger'>{error}</Message>\r\n                        ) : (\r\n                            <Form onSubmit={submitHandler}>\r\n                                <Form.Group controlId='name'>\r\n                                    <Form.Label>Name</Form.Label>\r\n                                    <Form.Control \r\n                                        type='name' \r\n                                        placeholder='Enter name' \r\n                                        value={name}\r\n                                        onChange={(e) => setName(e.target.value)}></Form.Control>\r\n                                </Form.Group>\r\n                                <Form.Group controlId='email'>\r\n                                    <Form.Label>Email Address</Form.Label>\r\n                                    <Form.Control \r\n                                        type='email' \r\n                                        placeholder='Enter email' \r\n                                        value={email}\r\n                                        onChange={(e) => setEmail(e.target.value)}></Form.Control>\r\n                                </Form.Group>\r\n\r\n                                <Form.Group controlId='isadmin'>\r\n                                    <Form.Check \r\n                                        type='checkbox' \r\n                                        label='Is Admin'\r\n                                        checked={isAdmin}\r\n                                        onChange={(e) => setIsAdmin(e.target.checked)}>\r\n\r\n                                    </Form.Check>\r\n                                </Form.Group>\r\n\r\n                                <Button type='submit' variant='primary'>Update</Button>\r\n                            </Form>  \r\n                        )}   \r\n                    </Col>\r\n                </Row>            \r\n            </Container>\r\n        </>        \r\n    )\r\n}\r\n\r\nexport default UserEditView","import React from 'react'\nimport { BrowserRouter as Router, Route } from 'react-router-dom'\nimport { Container } from 'react-bootstrap'\nimport Header from './components/Header/Header'\nimport HomeView from './view/HomeView'\nimport ProductView from './view/ProductView'\nimport LoginView from './view/LoginView'\nimport RegisterView from './view/RegisterView'\nimport CartView from './view/CartView'\nimport ProfileView from './view/ProfileView'\nimport Footer from './components/Footer/Footer'\nimport OrderListView from './view/OrderListView'\nimport OrderView from './view/OrderView'\nimport PaymentView from './view/PaymentView'\nimport PlaceOrderView from './view/PlaceOrderView'\nimport ProductEditView from './view/ProductEditView'\nimport ProductListView from './view/ProductListView'\nimport ShippingView from './view/ShippingView'\nimport UserListView from './view/UserListView'\nimport UserEditView from './view/UserEdit'\n\nconst App = () => {\n  return (\n    <Router>\n      <Header />\n      <main className='py-3'>\n        <Container>\n          <Route path='/' component={HomeView} exact />\n          <Route path='/cart/:id?' component={CartView}  />  \n          <Route path='/login' component={LoginView}  />\n          <Route path='/product/:id' component={ProductView}  />\n          <Route path='/profile' component={ProfileView}  />\n          <Route path='/register' component={RegisterView}  />\n          <Route path='/admin/orderlist' component={OrderListView}  /> \n          <Route path='/order/:id' component={OrderView}  />       \n          <Route path='/payment' component={PaymentView}  /> \n          <Route path='/placeorder' component={PlaceOrderView}  />  \n          <Route path='/admin/product/:id/edit' component={ProductEditView}  />\n          <Route path='/admin/productlist' component={ProductListView}  />       \n          <Route path='/shipping' component={ShippingView}  /> \n          <Route path='/admin/userList' component={UserListView}  />\n          <Route path='/admin/user/:id/edit' component={UserEditView}  />\n        </Container>\n      </main>\n      <Footer />\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { createStore, combineReducers, applyMiddleware } from 'redux'\r\nimport thunk from 'redux-thunk'\r\nimport { composeWithDevTools } from 'redux-devtools-extension'\r\nimport { productListReducer, productDetailsReducer, productDeleteReducer, productCreateReducer, productUpdateReducer } from './product/product.reducers'\r\n\r\nimport { userLoginReducer, userRegisterReducer, userDetailsReducer, \r\n    userUpdateProfileReducer, userListReducer, userDeleteReducer,\r\n    userUpdateReducer } from './user/user.reducers'\r\n\r\nimport { cartReducer } from './cart/cart.reducers'\r\n\r\nimport { orderCreateReducer, orderDetailsReducer, orderPayReducer, orderListMyReducer, orderListReducer, orderDeliverReducer } from './Order/order.reducers'\r\n\r\nconst reducer = combineReducers({\r\n    productList: productListReducer,    \r\n    productDetails: productDetailsReducer,\r\n    productDelete: productDeleteReducer,\r\n    productCreate: productCreateReducer,\r\n    productUpdate: productUpdateReducer,\r\n    userLogin: userLoginReducer,\r\n    userRegister: userRegisterReducer,\r\n    userDetails: userDetailsReducer,\r\n    userUpdateProfile: userUpdateProfileReducer,\r\n    userList: userListReducer,\r\n    userDelete: userDeleteReducer,\r\n    userUpdate: userUpdateReducer,\r\n    cart: cartReducer,\r\n    orderCreate: orderCreateReducer,\r\n    orderDetails: orderDetailsReducer,\r\n    orderPay: orderPayReducer,\r\n    orderListMy: orderListMyReducer,\r\n    orderList: orderListReducer,\r\n    orderDeliver: orderDeliverReducer,\r\n})\r\n\r\nconst cartItemsFormStorage = localStorage.getItem('cartItems') ? JSON.parse(\r\n    localStorage.getItem('cartItems')) : []\r\n\r\nconst userInfoFormStorage = localStorage.getItem('userInfo') ? JSON.parse(\r\n    localStorage.getItem('userInfo')) : null\r\n\r\nconst shippingAddressFormStorage = localStorage.getItem('shippingAddress') ? JSON.parse(\r\n    localStorage.getItem('shippingAddress')) : {}\r\n\r\nconst initialState = {\r\n    cart: { cartItems: cartItemsFormStorage, shippingAddress: shippingAddressFormStorage },\r\n    userLogin: { userInfo: userInfoFormStorage }\r\n}\r\n\r\nconst middleware = [thunk]\r\n\r\nconst store = createStore(reducer, initialState, composeWithDevTools(\r\n    applyMiddleware(...middleware)\r\n))\r\n\r\nexport default store","import ProductActionTypes from './product.types'\r\n\r\nexport const productListReducer = (state = { products: [] }, action) => {\r\n    switch (action.type) {\r\n        case ProductActionTypes.PRODUCT_LIST_REQUEST:\r\n            return { loading: true, products: [] }\r\n\r\n        case ProductActionTypes.PRODUCT_LIST_SUCCESS: \r\n            return { loading: false, products: action.payload }\r\n\r\n        case ProductActionTypes.PRODUCT_LIST_FAIL:\r\n            return { loading: false, error: action.payload }\r\n        default:\r\n            return state        \r\n    }\r\n}\r\n\r\nexport const productDetailsReducer = (state = { product: { reviews: [] } }, action) => {\r\n    switch (action.type) {\r\n        case ProductActionTypes.PRODUCT_DETAILS_REQUEST:\r\n            return { loading: true, ...state }\r\n\r\n        case ProductActionTypes.PRODUCT_DETAILS_SUCCESS: \r\n            return { loading: false, product: action.payload }\r\n\r\n        case ProductActionTypes.PRODUCT_DETAILS_FAIL:\r\n            return { loading: false, error: action.payload }\r\n        default:\r\n            return state        \r\n    }\r\n}\r\n\r\nexport const productDeleteReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case ProductActionTypes.PRODUCT_DELETE_REQUEST:\r\n            return { loading: true}\r\n\r\n        case ProductActionTypes.PRODUCT_DELETE_SUCCESS: \r\n            return { loading: false, success: true }\r\n\r\n        case ProductActionTypes.PRODUCT_DELETE_FAIL:\r\n            return { loading: false, error: action.payload }\r\n        default:\r\n            return state        \r\n    }\r\n}\r\n\r\nexport const productCreateReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case ProductActionTypes.PRODUCT_CREATE_REQUEST:\r\n            return { loading: true}\r\n\r\n        case ProductActionTypes.PRODUCT_CREATE_SUCCESS: \r\n            return { loading: false, success: true, product: action.payload }\r\n\r\n        case ProductActionTypes.PRODUCT_CREATE_FAIL:\r\n            return { loading: false, error: action.payload }\r\n\r\n        case ProductActionTypes.PRODUCT_CREATE_RESET:\r\n            return {}\r\n        default:\r\n            return state        \r\n    }\r\n}\r\n\r\nexport const productUpdateReducer = (state = { product: {}}, action) => {\r\n    switch (action.type) {\r\n        case ProductActionTypes.PRODUCT_UPDATE_REQUEST:\r\n            return { loading: true}\r\n\r\n        case ProductActionTypes.PRODUCT_UPDATE_SUCCESS: \r\n            return { loading: false, success: true, product: action.payload }\r\n\r\n        case ProductActionTypes.PRODUCT_UPDATE_FAIL:\r\n            return { loading: false, error: action.payload }\r\n\r\n        case ProductActionTypes.PRODUCT_UPDATE_RESET:\r\n            return { product: {}}\r\n        default:\r\n            return state        \r\n    }\r\n}","import UserActionTypes from './user.types'\r\n\r\nexport const userLoginReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case UserActionTypes.USER_LOGIN_REQUEST:\r\n            return { loading: true }\r\n\r\n        case UserActionTypes.USER_LOGIN_SUCCESS: \r\n            return { loading: false, userInfo: action.payload }\r\n\r\n        case UserActionTypes.USER_LOGIN_FAIL:\r\n            return { loading: false, error: action.payload }\r\n            \r\n        case UserActionTypes.USER_LOGOUT:\r\n            return {}\r\n            \r\n        default:\r\n            return state        \r\n    }\r\n}\r\n\r\nexport const userRegisterReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case UserActionTypes.USER_REGISTER_REQUEST:\r\n            return { loading: true }\r\n\r\n        case UserActionTypes.USER_REGISTER_SUCCESS: \r\n            return { loading: false, userInfo: action.payload }\r\n\r\n        case UserActionTypes.USER_REGISTER_FAIL:\r\n            return { loading: false, error: action.payload }\r\n\r\n        default:\r\n            return state        \r\n    }\r\n}\r\n\r\nexport const userDetailsReducer = (state = { user: {} }, action) => {\r\n    switch (action.type) {\r\n        case UserActionTypes.USER_DETAILS_REQUEST:\r\n            return {...state, loading: true }\r\n\r\n        case UserActionTypes.USER_DETAILS_SUCCESS: \r\n            return { loading: false, user: action.payload }\r\n\r\n        case UserActionTypes.USER_DETAILS_FAIL:\r\n            return { loading: false, error: action.payload }        \r\n\r\n        case UserActionTypes.USER_DETAILS_RESET:\r\n            return { user: {} }\r\n        default:\r\n            return state        \r\n    }\r\n}\r\n\r\nexport const userUpdateProfileReducer = (state = { }, action) => {\r\n    switch (action.type) {\r\n        case UserActionTypes.USER_UPDATE_PROFILE_REQUEST:\r\n            return {loading: true }\r\n\r\n        case UserActionTypes.USER_UPDATE_PROFILE_SUCCESS: \r\n            return { loading: false, success: true, userInfo: action.payload }\r\n\r\n        case UserActionTypes.USER_UPDATE_PROFILE_FAIL:\r\n            return { loading: false, error: action.payload }\r\n        default:\r\n            return state        \r\n    }\r\n}\r\n\r\nexport const userListReducer = (state = { users: [] }, action) => {\r\n    switch (action.type) {\r\n        case UserActionTypes.USER_LIST_REQUEST:\r\n            return {loading: true }\r\n\r\n        case UserActionTypes.USER_LIST_SUCCESS: \r\n            return { loading: false, users: action.payload }\r\n\r\n        case UserActionTypes.USER_LIST_FAIL:\r\n            return { loading: false, error: action.payload }\r\n\r\n        case UserActionTypes.USER_LIST_RESET:\r\n            return { users: [] }\r\n        default:\r\n            return state        \r\n    }\r\n}\r\n\r\nexport const userDeleteReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case UserActionTypes.USER_DELETE_REQUEST:\r\n            return {loading: true }\r\n\r\n        case UserActionTypes.USER_DELETE_SUCCESS: \r\n            return { loading: false, success: true }\r\n\r\n        case UserActionTypes.USER_DELETE_FAIL:\r\n            return { loading: false, error: action.payload }\r\n\r\n        default:\r\n            return state        \r\n    }\r\n}\r\n\r\nexport const userUpdateReducer = (state = { user: {} }, action) => {\r\n    switch (action.type) {\r\n        case UserActionTypes.USER_UPDATE_REQUEST:\r\n            return {loading: true }\r\n\r\n        case UserActionTypes.USER_UPDATE_SUCCESS: \r\n            return { loading: false, success: true }\r\n\r\n        case UserActionTypes.USER_UPDATE_FAIL:\r\n            return { loading: false, error: action.payload }\r\n\r\n        case UserActionTypes.USER_UPDATE_RESET:\r\n            return { user: {} }\r\n\r\n        default:\r\n            return state        \r\n    }\r\n}","import CartActionTypes from './cart.types'\r\n\r\nexport const cartReducer = (state = { cartItems: [], shippingAddress: {} }, action) => {\r\n    switch(action.type) {\r\n        \r\n        case CartActionTypes.CART_ADD_ITEM:\r\n            const item = action.payload\r\n\r\n            const existItem = state.cartItems.find(x => x.product === item.product)\r\n\r\n            if(existItem) {\r\n                return {\r\n                    ...state,\r\n                    cartItems: state.cartItems.map(x => x.product === existItem.product ? item : x)\r\n                }\r\n            } else {\r\n                return {\r\n                    ...state,\r\n                    cartItems: [...state.cartItems, item]\r\n                }\r\n            }\r\n        \r\n        case CartActionTypes.CART_REMOVE_ITEM:\r\n            return {\r\n                ...state,\r\n                cartItems: state.cartItems.filter(x => x.product !== action.payload)\r\n            }\r\n\r\n        case CartActionTypes.CART_SAVE_SHIPPING_ADDRESS:\r\n            return {\r\n                ...state,\r\n                shippingAddress: action.payload\r\n            }\r\n\r\n        case CartActionTypes.CART_SAVE_PAYMENT_METHOD:\r\n            return {\r\n                ...state,\r\n                paymentMethod: action.payload\r\n            }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}","import OrderActionTypes from './order.types'\r\n\r\nexport const orderCreateReducer = (state = {}, action) => {\r\n    switch(action.type) {\r\n        case OrderActionTypes.ORDER_CREATE_REQUEST:\r\n            return {\r\n                loading: true\r\n            }\r\n        \r\n        case OrderActionTypes.ORDER_CREATE_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                success: true,\r\n                order: action.payload\r\n            }\r\n        case OrderActionTypes.ORDER_CREATE_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport const orderDetailsReducer = (state = { loading: true, orderItems: [], shippingAddress: {}, itemsPrice: 0 }, action) => {\r\n    switch(action.type) {\r\n        case OrderActionTypes.ORDER_DETAILS_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        \r\n        case OrderActionTypes.ORDER_DETAILS_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                order: action.payload\r\n            }\r\n        case OrderActionTypes.ORDER_DETAILS_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const orderPayReducer = (state = {}, action) => {\r\n    switch(action.type) {\r\n        case OrderActionTypes.ORDER_PAY_REQUEST:\r\n            return {\r\n                loading: true\r\n            }\r\n        \r\n        case OrderActionTypes.ORDER_PAY_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                success: true,\r\n            }\r\n        case OrderActionTypes.ORDER_PAY_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n        \r\n        case OrderActionTypes.ORDER_PAY_RESET:\r\n            return {\r\n                \r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const orderListMyReducer = (state = { orders: [] }, action) => {\r\n    switch(action.type) {\r\n        case OrderActionTypes.ORDER_LIST_MY_REQUEST:\r\n            return {\r\n                loading: true\r\n            }\r\n        \r\n        case OrderActionTypes.ORDER_LIST_MY_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                orders: action.payload,\r\n            }\r\n        case OrderActionTypes.ORDER_LIST_MY_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n        case OrderActionTypes.ORDER_LIST_MY_RESET:\r\n            return { orders: [] }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const orderListReducer = (state = { orders: [] }, action) => {\r\n    switch(action.type) {\r\n        case OrderActionTypes.ORDER_LIST_REQUEST:\r\n            return {\r\n                loading: true\r\n            }\r\n        \r\n        case OrderActionTypes.ORDER_LIST_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                orders: action.payload,\r\n            }\r\n        case OrderActionTypes.ORDER_LIST_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const orderDeliverReducer = (state = {}, action) => {\r\n    switch(action.type) {\r\n        case OrderActionTypes.ORDER_DELIVER_REQUEST:\r\n            return {\r\n                loading: true\r\n            }\r\n        \r\n        case OrderActionTypes.ORDER_DELIVER_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                success: true,\r\n            }\r\n        case OrderActionTypes.ORDER_DELIVER_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n        \r\n        case OrderActionTypes.ORDER_DELIVER_RESET:\r\n            return {\r\n                \r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals'\nimport 'bootstrap/dist/css/bootstrap.min.css'\n\nimport { Provider } from 'react-redux'\nimport store from './redux/store'\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}